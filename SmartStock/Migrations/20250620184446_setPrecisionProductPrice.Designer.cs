// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartStock.Data;

#nullable disable

namespace SmartStock.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250620184446_setPrecisionProductPrice")]
    partial class setPrecisionProductPrice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartStock.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Electronics",
                            Name = "Smartphone",
                            Price = 250.00m,
                            Quantity = 15
                        },
                        new
                        {
                            Id = 2,
                            Category = "Clothing",
                            Name = "T-Shirt",
                            Price = 10.00m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 3,
                            Category = "Food",
                            Name = "Rice 5kg",
                            Price = 5.50m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 4,
                            Category = "Electronics",
                            Name = "Headphones",
                            Price = 29.99m,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 5,
                            Category = "Clothing",
                            Name = "Jeans",
                            Price = 19.99m,
                            Quantity = 60
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
